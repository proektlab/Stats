function location = robustLocation(X,modelname,varargin)

if nargin<2, model.name = []; end;
if isempty(modelname), model.name = 'norm'; 
else model.name = modelname; end;
model.d = [];
model.T1 = [];


nObs = size(X,1);
tol = .01;
maxIter = 500;

if nObs == 1,
    location = X;
elseif nObs == 2,
    location = mean(X);
elseif nObs ==3,
    location = median(X);
else
    T1 = median(X);
    model.T1 = T1;
    Sn = MADn(X,model,varargin{:});
    weightDist = psiPrimeDPhi(model,varargin{:});
    notConverged = 1;
    iter = 0;
    while(notConverged),
        iter = iter+1;
        T0 = T1;
        T1 = T0 + Sn.*mean(psiLog((X-repmat(T0,[nObs 1]))./repmat(Sn,[nObs 1])))./weightDist;
        notConverged = any((T1-T0)*(T1-T0)'>tol*T0*T0') && iter<maxIter;
    end
    if iter>=maxIter, warning('robustLocation did not converge; returning most recent results'); end;
    location = T0;
end;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function psi = psiLog(X)
eX = exp(X);
psi = (eX-1)./(eX + 1);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function y = psiPrimeLog(X)
y = 2.*exp(X)./(1+exp(X)).^2;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function Sn = MADn(X,model,varargin)
bn = fcorfac(X);
M = model.T1;
model = modelScale(model,varargin{:});
Sn = bn*median(abs(X - repmat(M,[size(X,1) 1])),1)./model.d;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function model = modelScale(model,varargin)
if isempty(model.d)
    if strcmpi(model.name,'norm')||strcmpi(model.name,'normal')||strcmpi(model.name,'gauss')
        med = norminv(0.5,varargin{:});
        model.d = fminsearch(@normMAD, norminv(.75,varargin{:}),[],med,varargin{:});
    elseif strcmpi(model.name,'chi2')||strcmpi(model.name,'chisquare')
        med = chiinv(0.5,varargin{:});
        model.d = fminsearch(@chi2MAD, chi2inv(.75,varargin{:}),[],med,varargin{:});
    elseif strcmpi(model.name,'rayleigh')||strcmpi(model.name,'rayl')
        if varargin{:} == 1
            model.d = 2.351478951553029;
        else
            phi = raylinv(.75,varargin{:});
            med = raylinv(0.5,varargin{:});
            model.d = fminsearch(@raylMAD,phi,[],med,varargin{:});
        end
    elseif strcmpi(model.name,'f')
        if varargin{1} == 2 && varargin{2} == 2
            model.d = 1.236035156249995825561427;
        elseif varargin{1} == 2 && varargin{2} == 4
            model.d = 1.129687499999999289457264;
        elseif varargin{1} == 2 && varargin{2} == 6
            model.d = 1.110153570189508442922488;
        elseif varargin{1} == 2 && varargin{2} == 8
            model.d = 1.103733521768775815985464;
        elseif varargin{1} == 2 && varargin{2} == 10
            model.d = 1.10096060855679711565358;
        elseif varargin{1} == 2 && varargin{2} == 12
            model.d = 1.099587879047448257807673;
        else
            med = finv(0.5,varargin{:});
            phi = finv(0.75,varargin{:});
            model.d = fminsearch(@fMAD,phi,[],med,varargin{:});
        end
    else
        error('Unrecognized model.name');
    end;
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function d = normMAD(x,med,varargin)
d = (normcdf(x+med,varargin{:}) - normcdf(x-med,varargin{:}) - 0.5).^2;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function d = chi2MAD(x,med,varargin)
d = (chi2cdf(x+med,varargin{:}) - chi2cdf(x-med,varargin{:}) - 0.5).^2;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function d = raylMAD(x,med,varargin)
d = (raylcdf(x+med,varargin{:}) - raylcdf(x-med,varargin{:}) - 0.5).^2;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function d = fMAD(x,med,varargin)
d = (fcdf(x+med,varargin{:}) - fcdf(x-med,varargin{:}) - 0.5).^2;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function d = psiPrimeDPhi(model,varargin)
grid = 0.001:0.0025:0.999;
model.name = lower(model.name);
if strcmp(model.name,'norm')||strcmp(model.name,'normal')||strcmp(model.name,'gauss')
    grid = norminv(grid,varargin{:});
    d = normpdf(grid,varargin{:})*psiPrimeLog(grid)';
elseif strcmp(model.name,'chi2')||strcmp(model.name,'chisquare')
    grid = chi2inv(grid,varargin{:});
    d = chi2pdf(grid,varargin{:})*psiPrimeLog(grid)';
elseif strcmp(model.name,'rayleigh')||strcmp(model.name,'rayl')
    grid = raylinv(grid,varargin{:});
    d = raylpdf(grid,varargin{:})*psiPrimeLog(grid)';
elseif strcmp(model.name,'f')
    grid = finv(grid,varargin{:});
    d = fpdf(grid,varargin{:})*psiPrimeLog(grid)';
else
    error('Unrecognized model.name');
end;


    0.0010    0.0035    0.0060    0.0085    0.0111    0.0136    0.0162    0.0187    0.0213

  Columns 10 through 18

    0.0238    0.0264    0.0290    0.0316    0.0342    0.0368    0.0394    0.0420    0.0447

  Columns 19 through 27

    0.0473    0.0500    0.0526    0.0553    0.0580    0.0606    0.0633    0.0660    0.0687

  Columns 28 through 36

    0.0715    0.0742    0.0769    0.0797    0.0824    0.0852    0.0880    0.0907    0.0935

  Columns 37 through 45

    0.0963    0.0991    0.1020    0.1048    0.1076    0.1105    0.1133    0.1162    0.1191

  Columns 46 through 54

    0.1219    0.1248    0.1277    0.1306    0.1336    0.1365    0.1394    0.1424    0.1454

  Columns 55 through 63

    0.1483    0.1513    0.1543    0.1573    0.1603    0.1634    0.1664    0.1695    0.1725

  Columns 64 through 72

    0.1756    0.1787    0.1818    0.1849    0.1880    0.1911    0.1942    0.1974    0.2005

  Columns 73 through 81

    0.2037    0.2069    0.2101    0.2133    0.2165    0.2197    0.2230    0.2262    0.2295

  Columns 82 through 90

    0.2328    0.2361    0.2394    0.2427    0.2460    0.2494    0.2527    0.2561    0.2595

  Columns 91 through 99

    0.2629    0.2663    0.2697    0.2731    0.2766    0.2800    0.2835    0.2870    0.2905

  Columns 100 through 108

    0.2940    0.2975    0.3011    0.3046    0.3082    0.3118    0.3154    0.3190    0.3226

  Columns 109 through 117

    0.3263    0.3299    0.3336    0.3373    0.3410    0.3447    0.3485    0.3522    0.3560

  Columns 118 through 126

    0.3598    0.3636    0.3674    0.3712    0.3751    0.3790    0.3828    0.3867    0.3907

  Columns 127 through 135

    0.3946    0.3985    0.4025    0.4065    0.4105    0.4145    0.4186    0.4226    0.4267

  Columns 136 through 144

    0.4308    0.4349    0.4391    0.4432    0.4474    0.4516    0.4558    0.4600    0.4643

  Columns 145 through 153

    0.4685    0.4728    0.4771    0.4814    0.4858    0.4902    0.4946    0.4990    0.5034

  Columns 154 through 162

    0.5079    0.5123    0.5168    0.5214    0.5259    0.5305    0.5351    0.5397    0.5443

  Columns 163 through 171

    0.5490    0.5537    0.5584    0.5631    0.5678    0.5726    0.5774    0.5823    0.5871

  Columns 172 through 180

    0.5920    0.5969    0.6018    0.6068    0.6118    0.6168    0.6218    0.6269    0.6320

  Columns 181 through 189

    0.6371    0.6422    0.6474    0.6526    0.6579    0.6631    0.6684    0.6737    0.6791

  Columns 190 through 198

    0.6845    0.6899    0.6953    0.7008    0.7063    0.7119    0.7174    0.7230    0.7287

  Columns 199 through 207

    0.7343    0.7401    0.7458    0.7516    0.7574    0.7632    0.7691    0.7750    0.7810

  Columns 208 through 216

    0.7870    0.7930    0.7991    0.8052    0.8113    0.8175    0.8237    0.8300    0.8363

  Columns 217 through 225

    0.8426    0.8490    0.8554    0.8619    0.8684    0.8750    0.8816    0.8882    0.8949

  Columns 226 through 234

    0.9016    0.9084    0.9153    0.9221    0.9291    0.9360    0.9431    0.9501    0.9573

  Columns 235 through 243

    0.9644    0.9717    0.9790    0.9863    0.9937    1.0011    1.0086    1.0162    1.0238

  Columns 244 through 252

    1.0315    1.0392    1.0470    1.0549    1.0628    1.0707    1.0788    1.0869    1.0951

  Columns 253 through 261

    1.1033    1.1116    1.1200    1.1284    1.1369    1.1455    1.1542    1.1629    1.1717

  Columns 262 through 270

    1.1806    1.1895    1.1986    1.2077    1.2169    1.2262    1.2355    1.2450    1.2545

  Columns 271 through 279

    1.2641    1.2738    1.2836    1.2935    1.3035    1.3136    1.3238    1.3341    1.3445

  Columns 280 through 288

    1.3550    1.3655    1.3762    1.3871    1.3980    1.4090    1.4201    1.4314    1.4428

  Columns 289 through 297

    1.4543    1.4659    1.4777    1.4896    1.5016    1.5137    1.5260    1.5385    1.5510

  Columns 298 through 306

    1.5638    1.5766    1.5897    1.6028    1.6162    1.6297    1.6433    1.6572    1.6712

  Columns 307 through 315

    1.6854    1.6998    1.7143    1.7291    1.7440    1.7592    1.7746    1.7901    1.8059

  Columns 316 through 324

    1.8219    1.8382    1.8547    1.8714    1.8883    1.9056    1.9231    1.9408    1.9588

  Columns 325 through 333

    1.9771    1.9957    2.0147    2.0339    2.0534    2.0733    2.0935    2.1141    2.1350

  Columns 334 through 342

    2.1563    2.1780    2.2000    2.2226    2.2455    2.2689    2.2927    2.3170    2.3418

  Columns 343 through 351

    2.3671    2.3930    2.4194    2.4464    2.4739    2.5021    2.5310    2.5605    2.5908
    2.6218    2.6535    2.6861    2.7195    2.7538    2.7891    2.8253    2.8625    2.9009
    2.9404    2.9811    3.0231    3.0665    3.1113    3.1577    3.2057    3.2554    3.3070
    3.3606    3.4163    3.4744    3.5349    3.5982    3.6643    3.7336    3.8064    3.8830
    3.9638    4.0492    4.1397    4.2359    4.3386    4.4484    4.5666    4.6942    4.8327
    4.9841    5.1506    5.3352    5.5421    5.7766    6.0464    6.3625    6.7421    7.2132
    7.8269    8.6895   10.0854   13.3549


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function bn=fcorfac(Z)
n=size(Z,1);
switch n
case 2
   bn=1.196;
case 3
   bn=1.495;
case 4
   bn=1.363;
case 5
   bn=1.206;
case 6
   bn=1.200;
case 7
   bn=1.140;
case 8
   bn=1.129;
case 9
   bn=1.107;
end
if n>9
   bn=n/(n-0.8);
end